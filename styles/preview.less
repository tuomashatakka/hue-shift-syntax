// @import "ui-variables";

.syntax-preview {
  @component-padding: 0.75rem;
  @editor-width: 40%;
  @header-height: 4rem;
  @grammar-select-height: 6rem;

  overflow-y: auto;
  position: static;
  display: block;
  height: 100%;
  width: 100%;

  > .editor {
    position: absolute;
    flex-flow: column nowrap;
    display: flex;
    top: @header-height;
    bottom: 0;
    right: 0;
    width: @editor-width;
    overflow: hidden }

  > .config {
    margin-right: @editor-width }

  > .main-header {
    height: @header-height;
    box-sizing: border-box;
    padding: @component-padding;

    h1 {
      margin: 0;
      font-size: 2em;
      line-height: @header-height - @component-padding * 2 }}

  // Config sections
  .config h3 {
    font-size: 1em;
    margin: 0 }
  .config em:empty { display: none }
  .config em { display: none }
  .config .section { margin-bottom: @component-padding }

  .colors-section {
    .color {
      --size: 2em;
      margin: 0 2px 0 0;
      &:last-child { margin: 0 }}
  }

  .colors-section main {
     display: flex;
     justify-content: center;
     padding: 0 0 @component-padding;
     .color.circle { --size: 4em }}

  .color-variants-section {
     display: flex;
     justify-content: center;
     padding: 0 0 @component-padding }

  // Input fields
  .control-group {
    display: flex;
    align-items: stretch;
    position: relative;
    margin: 0;
    padding: @component-padding @component-padding;

    .control-label {
      h4 {
        margin: 0;
        font-size: 1em }
      p { display: none }}

    .controls {
      flex: 1 0;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 0 0 @component-padding / 3 * 2;
      align-items: stretch;

      *:not(:last-child) {
        margin: 0 @component-padding 0 0 }}

    output {
      box-sizing: content-box;
      vertical-align: middle;
      text-align: center;
      padding: 0 @component-padding / 3 * 2;
      margin: 0 0 0 @component-padding;
      min-width: 0;
      width: auto;
      height: 1.6em;
      line-height: 1.6em;
      transition:
        background-color 1500ms,
        color 750ms }
    output.badge-info {
      transition-duration: 300ms }
    output.badge-success {
      transition-duration: 150ms }
  }

  // Text editor mouseover fill
  // > .editor:hover .grammar-select {
  //   opacity: 1;
  //   transition-duration: .05s }
  > .editor .grammar-select {
    // opacity: 1;
    flex-flow: row nowrap;
    align-items: center;
    position: relative;
    display: flex;
    height: @grammar-select-height;
    padding: 0 @component-padding * 2 @component-padding * 2;
    width: 100%;
    z-index: 10;
    transition: opacity .2s;
    box-sizing: border-box;

    h2 {
      display: inline;
      flex: 1 0 auto }

    select {
      vertical-align: middle;
      font-size: 2.4em;
      flex: 0 1 auto }}

  atom-text-editor.editor {
    height: 100% }

  // atom-text-editor.editor::before {
  //   content: "";
  //   position: absolute;
  //   display: block;
  //   top: 0;
  //   left: 0;
  //   right: 0;
  //   bottom: 0;
  //   z-index: 1000;
  //   transition: background .5s }
  //
  // .grammar-select:hover + atom-text-editor.editor::before,
  // atom-text-editor.editor:hover::before {
  //   background: fade(@base, 75%);
  //   transition-duration: .05s }
}


.cursor-scope {
  position: fixed;
  min-width: 6em;
  z-index: 5000;
  flex: 1 0 6em;
  right: 0;
  left: 0;

  .full-scope {
    background: @syntax-background-color;
    line-height: inherit;
    position: absolute;
    font-size: 1.5em;
    padding: 0 1em;
    width: 100%;
    bottom: 0 }}
